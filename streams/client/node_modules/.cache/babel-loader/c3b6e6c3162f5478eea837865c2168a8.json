{"ast":null,"code":"var _jsxFileName = \"/Users/charlymac/My Projects/Learning React/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle align icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, stream.title, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, stream.description)), this.renderAdmin(stream));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Object.values convert the OBJECT state.streams into an array and pass it to the component's props\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/charlymac/My Projects/Learning React/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","id","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,YAAR,QAA2B,eAA3B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAEvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC9C,0BAAQ;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,eAEN;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFM,CAAR;AAID;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAI;AACtC,0BAAQ;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,eAEN;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,MAAM,CAACO,KADV,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BP,MAAM,CAACQ,WAArC,CAFF,CAFM,EAML,KAAKT,WAAL,CAAiBC,MAAjB,CANK,CAAR;AAQD,KATM,CAAP;AAUD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADM,eAEN;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKN,UAAL,EAAjC,CAFM,CAAR;AAID;;AAjCsC;;AAoCzC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA,SAAO;AACLP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADJ;AAELF,IAAAA,aAAa,EAAES,KAAK,CAACG,IAAN,CAAWb;AAFrB,GAAP;AAID,CAND;;AAQA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {fetchStreams} from '../../actions';\n\nclass StreamList extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (<div className=\"right floated content\">\n        <button className=\"ui button primary\">Edit</button>\n        <button className=\"ui button negative\">Delete</button>\n      </div>);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (<div className=\"item\" key={stream.id}>\n        <i className=\"large middle align icon camera\"/>\n        <div className=\"content\">\n          {stream.title}\n          <div className=\"description\">{stream.description}</div>\n        </div>\n        {this.renderAdmin(stream)}\n      </div>);\n    });\n  }\n\n  render() {\n    return (<div>\n      <h2>Streams</h2>\n      <div className=\"ui celled list\">{this.renderList()}</div>\n    </div>);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Object.values convert the OBJECT state.streams into an array and pass it to the component's props\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);\n"]},"metadata":{},"sourceType":"module"}