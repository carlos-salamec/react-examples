{"ast":null,"code":"var _jsxFileName = \"/Users/charlymac/My Projects/Learning React/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle align icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, stream.title, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"StreamList\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Object.values convert the OBJECT state.streams into an array and pass it to the component's props\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/charlymac/My Projects/Learning React/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderList","streams","map","stream","id","title","description","render","console","log","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,YAAR,QAA2B,eAA3B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAEvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AACtC,0BAAQ;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAG,QAAA,SAAS,EAAC,gCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,eAEN;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MAAM,CAACE,KADV,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BF,MAAM,CAACG,WAArC,CAFF,CAFM,CAAR;AAOD,KARM,CAAP;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,OAAvB;AACA,wBAAQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AAGD;;AAvBsC;;AA0BzC,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA,SAAO;AACLV,IAAAA,OAAO,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,OAApB;AADJ,GAAP;AAGD,CALD;;AAOA,eAAeP,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {fetchStreams} from '../../actions';\n\nclass StreamList extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (<div className=\"item\" key={stream.id}>\n        <i className=\"large middle align icon camera\"/>\n        <div className=\"content\">\n          {stream.title}\n          <div className=\"description\">{stream.description}</div>\n        </div>\n      </div>);\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return (<div className=\"ui container\">\n      StreamList\n    </div>);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //Object.values convert the OBJECT state.streams into an array and pass it to the component's props\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);\n"]},"metadata":{},"sourceType":"module"}