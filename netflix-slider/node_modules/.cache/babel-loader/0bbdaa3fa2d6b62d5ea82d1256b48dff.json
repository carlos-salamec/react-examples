{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/charlymac/My Projects/netflix-slider/src/components/NetflixSlider/Slider.js\";\n\n// useState allows to a functional component to use state level component --> HOOKS\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport SliderContext from '../../contexts/SliderContext';\nimport SlideButton from './SlideButton';\nimport SliderWrapper from './SliderWrapper';\nimport useSliding from './useSliding';\nimport useSizeElement from './useSizeElement';\nimport './Slider.scss';\n\nvar Slider = function Slider(props) {\n  var _useSizeElement = useSizeElement(),\n      width = _useSizeElement.width,\n      elementRef = _useSizeElement.elementRef;\n\n  var _useSliding = useSliding(width, React.Children.count(props.children)),\n      handlePrev = _useSliding.handlePrev,\n      handleNext = _useSliding.handleNext,\n      slideProps = _useSliding.slideProps,\n      containerRef = _useSliding.containerRef,\n      hasNext = _useSliding.hasNext,\n      hasPrev = _useSliding.hasPrev; // Here it's all the slider context value\n\n\n  var contextValue = {\n    elementRef: elementRef\n  }; // The component Slider is the provider of the context for the rest of the components\n  // The context value is pass it on the contextValue variable\n\n  return /*#__PURE__*/React.createElement(SliderContext.Provider, {\n    value: contextValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SliderWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('slider', {\n      'slider--open': currentSlide != null\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: containerRef,\n    className: \"slider__container\"\n  }, slideProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), props.children)), hasPrev && /*#__PURE__*/React.createElement(SlideButton, {\n    onClick: handlePrev,\n    type: \"prev\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }), hasNext && /*#__PURE__*/React.createElement(SlideButton, {\n    onClick: handleNext,\n    type: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  })), currentSlide);\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/charlymac/My Projects/netflix-slider/src/components/NetflixSlider/Slider.js"],"names":["React","useState","cx","SliderContext","SlideButton","SliderWrapper","useSliding","useSizeElement","Slider","props","width","elementRef","Children","count","children","handlePrev","handleNext","slideProps","containerRef","hasNext","hasPrev","contextValue","currentSlide"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,eAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,wBACIF,cAAc,EADlB;AAAA,MACjBG,KADiB,mBACjBA,KADiB;AAAA,MACVC,UADU,mBACVA,UADU;;AAAA,oBASpBL,UAAU,CAACI,KAAD,EAAQV,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBJ,KAAK,CAACK,QAA3B,CAAR,CATU;AAAA,MAGtBC,UAHsB,eAGtBA,UAHsB;AAAA,MAItBC,UAJsB,eAItBA,UAJsB;AAAA,MAKtBC,UALsB,eAKtBA,UALsB;AAAA,MAMtBC,YANsB,eAMtBA,YANsB;AAAA,MAOtBC,OAPsB,eAOtBA,OAPsB;AAAA,MAQtBC,OARsB,eAQtBA,OARsB,EAWxB;;;AACA,MAAMC,YAAY,GAAG;AACnBV,IAAAA,UAAU,EAAVA;AADmB,GAArB,CAZwB,CAgBxB;AACA;;AACA,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEU,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEnB,EAAE,CAAC,QAAD,EAAW;AACzB,sBAAgBoB,YAAY,IAAI;AADP,KAAX,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,GAAG,EAAEJ,YAAV;AAAwB,IAAA,SAAS,EAAC;AAAlC,KAA0DD,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuER,KAAK,CAACK,QAA7E,CAHF,CADF,EAMGM,OAAO,iBAAI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,UAAtB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANd,EAOGI,OAAO,iBAAI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,UAAtB;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPd,CADM,EAULM,YAVK,CAAR;AAYD,CA9BD;;AAgCA,eAAed,MAAf","sourcesContent":["// useState allows to a functional component to use state level component --> HOOKS\nimport React, {useState} from 'react';\nimport cx from 'classnames';\nimport SliderContext from '../../contexts/SliderContext'\nimport SlideButton from './SlideButton'\nimport SliderWrapper from './SliderWrapper'\nimport useSliding from './useSliding'\nimport useSizeElement from './useSizeElement'\nimport './Slider.scss'\n\nconst Slider = (props) => {\n  const {width, elementRef} = useSizeElement();\n  const {\n    handlePrev,\n    handleNext,\n    slideProps,\n    containerRef,\n    hasNext,\n    hasPrev\n  } = useSliding(width, React.Children.count(props.children));\n\n  // Here it's all the slider context value\n  const contextValue = {\n    elementRef\n  };\n\n  // The component Slider is the provider of the context for the rest of the components\n  // The context value is pass it on the contextValue variable\n  return (<SliderContext.Provider value={contextValue}>\n    <SliderWrapper>\n      <div className={cx('slider', {\n          'slider--open': currentSlide != null\n        })}>\n        <div ref={containerRef} className=\"slider__container\" {...slideProps}>{props.children}</div>\n      </div>\n      {hasPrev && <SlideButton onClick={handlePrev} type=\"prev\"/>}\n      {hasNext && <SlideButton onClick={handleNext} type=\"next\"/>}\n    </SliderWrapper>\n    {currentSlide}\n  </SliderContext.Provider>);\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}