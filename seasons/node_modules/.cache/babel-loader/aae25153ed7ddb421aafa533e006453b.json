{"ast":null,"code":"var _jsxFileName = \"/Users/charlymac/My Projects/Learning React/seasons/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst App = () => {\n  const [lat, setLat] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(position => setLat(position.coords.latitude), err => setErrorMessage(err.message));\n  }, []);\n  let content;\n\n  if (errorMessage) {\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, \"Error: \", errorMessage);\n  } else if (lat) {\n    content = /*#__PURE__*/React.createElement(SeasonDisplay, {\n      lat: lat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    });\n  } else {\n    content = /*#__PURE__*/React.createElement(LoadingSpinner, {\n      message: \"Please accept location request\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, content);\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/charlymac/My Projects/Learning React/seasons/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","LoadingSpinner","App","lat","setLat","errorMessage","setErrorMessage","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","message","content","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CAAiDC,QAAD,IAAcP,MAAM,CAACO,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAApE,EAAiGC,GAAD,IAASR,eAAe,CAACQ,GAAG,CAACC,OAAL,CAAxH;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIC,OAAJ;;AAEA,MAAIX,YAAJ,EAAkB;AAChBW,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaX,YAAb,CAAV;AACD,GAFD,MAEO,IAAIF,GAAJ,EAAS;AACda,IAAAA,OAAO,gBAAG,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEb,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFM,MAEA;AACLa,IAAAA,OAAO,gBAAG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,gCAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,OAA7B,CAAP;AACD,CAnBD;;AAqBAjB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAxB","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport SeasonDisplay from './SeasonDisplay'\nimport LoadingSpinner from './LoadingSpinner'\n\nconst App = () => {\n  const [lat, setLat] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition((position) => setLat(position.coords.latitude), (err) => setErrorMessage(err.message));\n  }, []);\n\n  let content;\n\n  if (errorMessage) {\n    content = <div>Error: {errorMessage}</div>;\n  } else if (lat) {\n    content = <SeasonDisplay lat={lat}/>;\n  } else {\n    content = <LoadingSpinner message='Please accept location request'/>;\n  }\n\n  return <div className=\"border red\">{content}</div>\n};\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}