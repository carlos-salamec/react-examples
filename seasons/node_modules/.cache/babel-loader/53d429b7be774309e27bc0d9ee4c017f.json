{"ast":null,"code":"var _jsxFileName = \"/Users/charlymac/My Projects/Learning React/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport LoadingSpinner from './LoadingSpinner';\nimport useLocation from './useLocation';\n\nconst App = () => {\n  const [lat, errorMessage] = useLocation();\n  let content;\n\n  if (errorMessage) {\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    }, \"Error: \", errorMessage);\n  } else if (lat) {\n    content = /*#__PURE__*/React.createElement(SeasonDisplay, {\n      lat: lat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    });\n  } else {\n    content = /*#__PURE__*/React.createElement(LoadingSpinner, {\n      message: \"Please accept location request\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, content);\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/charlymac/My Projects/Learning React/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","LoadingSpinner","useLocation","App","lat","errorMessage","content","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,GAAD,EAAMC,YAAN,IAAsBH,WAAW,EAAvC;AACA,MAAII,OAAJ;;AAEA,MAAID,YAAJ,EAAkB;AAChBC,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaD,YAAb,CAAV;AACD,GAFD,MAEO,IAAID,GAAJ,EAAS;AACdE,IAAAA,OAAO,gBAAG,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEF,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFM,MAEA;AACLE,IAAAA,OAAO,gBAAG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,gCAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,OAA7B,CAAP;AACD,CAdD;;AAgBAP,QAAQ,CAACQ,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAxB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport SeasonDisplay from './SeasonDisplay';\nimport LoadingSpinner from './LoadingSpinner';\nimport useLocation from './useLocation';\n\nconst App = () => {\n\n  const [lat, errorMessage] = useLocation();\n  let content;\n\n  if (errorMessage) {\n    content = <div>Error: {errorMessage}</div>;\n  } else if (lat) {\n    content = <SeasonDisplay lat={lat}/>;\n  } else {\n    content = <LoadingSpinner message='Please accept location request'/>;\n  }\n\n  return <div className=\"border red\">{content}</div>\n};\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}