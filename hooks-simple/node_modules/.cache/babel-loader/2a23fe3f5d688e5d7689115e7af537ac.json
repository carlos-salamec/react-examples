{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useResources = resource => {\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async resource => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n    setResources(response.data);\n  };\n  /* we are passing an array as second argument to an arrow function to\n  indicate that we want that the funtion gets call just when the  value of\n  that array changes*/\n\n\n  useEffect(() => {\n    fetchResource(resource);\n  }, [resource]);\n  return resources;\n};\n\nexport default useResources;","map":{"version":3,"sources":["/Users/charlymac/My Projects/Learning React/hooks-simple/src/components/useResources.js"],"names":["useState","useEffect","axios","useResources","resource","resources","setResources","fetchResource","response","get","data"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,aAAa,GAAG,MAAOH,QAAP,IAAoB;AACxC,UAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,wCAAuCL,QAAS,EAA3D,CAAvB;AACAE,IAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD,GAHD;AAKA;;;;;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACH,QAAD,CAAb;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOC,SAAP;AACD,CAhBD;;AAkBA,eAAeF,YAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nconst useResources = (resource) => {\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async (resource) => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n    setResources(response.data);\n  };\n\n  /* we are passing an array as second argument to an arrow function to\n  indicate that we want that the funtion gets call just when the  value of\n  that array changes*/\n  useEffect(() => {\n    fetchResource(resource)\n  }, [resource]);\n\n  return resources;\n}\n\nexport default useResources;\n"]},"metadata":{},"sourceType":"module"}