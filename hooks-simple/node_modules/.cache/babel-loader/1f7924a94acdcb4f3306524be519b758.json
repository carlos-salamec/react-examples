{"ast":null,"code":"var _jsxFileName = \"/Users/charlymac/My Projects/Learning React/hooks-simple/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({\n  resource\n}) => {\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async resource => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n    setResources(response.data);\n  };\n  /* we are passing an array as second argument to an arrow function to\n  indicate that we want that the funtion gets call just when the  value of\n  that array changes*/\n\n\n  useEffect(() => {\n    fetchResource(resource);\n  }, [resource]);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, resource.map(record => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 39\n    }\n  }, record.title)));\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/Users/charlymac/My Projects/Learning React/hooks-simple/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resource","resources","setResources","fetchResource","response","get","data","map","record","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,aAAa,GAAG,MAAOH,QAAP,IAAoB;AACxC,UAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,wCAAuCL,QAAS,EAA3D,CAAvB;AACAE,IAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD,GAHD;AAKA;;;;;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACH,QAAD,CAAb;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,QAAQ,CAACO,GAAT,CAAaC,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAACC,KAAZ,CAAvB,CAAL,CAAR;AAED,CAlBD;;AAoBA,eAAeV,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({resource}) => {\n\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async (resource) => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n    setResources(response.data);\n  };\n\n  /* we are passing an array as second argument to an arrow function to\n  indicate that we want that the funtion gets call just when the  value of\n  that array changes*/\n  useEffect(() => {\n    fetchResource(resource)\n  }, [resource]);\n\n  return (<ul>{resource.map(record => <li>{record.title}</li>)}</ul>);\n\n}\n\nexport default ResourceList;\n"]},"metadata":{},"sourceType":"module"}